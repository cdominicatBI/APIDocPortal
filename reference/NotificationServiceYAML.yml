openapi: 3.0.1
info:
  title: Notification Service
  description: "Notification Service APIs are a mesh of policies governing functionality\
    \ and microservices in a customer solution. BrightInsight developers use them\
    \ to configure and adjust the behavior of functionality and independent microservices\
    \ as they are packaged for a deliverable, controlling how those objectscommunicate\
    \ with each other and external systems. This allows them to easily implement permissions\
    \ and data policies mapped directly to application behavior outcomes, ensuring\
    \ good end-user experiences. BrightInsight developers typically provide the initial\
    \ configuration and these remain in place once they have been tested and put into\
    \ production."
  version: 1.0.0
  x-safety-class: C
  x-safety-class-description: "the loss of the primary function of the Notification\
    \ Service may potentially, worse-case, cause serious injury to the patient."
  x-external-services:
  - name: User Service
    use: "used to get user information, status and permissions"
    errorHandling: https://flexdigitalhealth.jamacloud.com/perspective.req#/items/2767849?projectId=376
  - name: Organization Service
    use: used to get organization information and status
    errorHandling: https://flexdigitalhealth.jamacloud.com/perspective.req#/items/3939886?projectId=376
servers:
- url: http://localhost
  description: Generated server url
paths:
  /notifications/templates:
    get:
      tags:
      - NotificationTemplate
      summary: List Notification Templates
      description: List Notification Templates API allows get a paged result of templates.
      operationId: API-NS02
      parameters:
      - name: category
        in: query
        required: false
        schema:
          type: string
      - name: orgId
        in: query
        required: false
        schema:
          type: string
          format: uuid
      - name: channel
        in: query
        required: false
        schema:
          type: string
      - name: pageable
        in: query
        required: true
        schema:
          $ref: '#/components/schemas/Pageable'
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagingInfoNotificationTemplateResponseDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                NS_ENTITY_WITH_DETAIL_NOT_FOUND:
                  $ref: '#/components/examples/NS_ENTITY_WITH_DETAIL_NOT_FOUND'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_NS02_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_NS02_002
        description: Users must have permission to call API. Refer to UMS_PERMISSION_DENIED.
      - name: VR_NS02_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_NS02_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_NS02_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_NS02_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_NS02_007
        description: "Field observationValueNumeric or observationValueText are mutually\
          \ exclusive, just one of them is required. Refer to ERR_0844."
      - name: VR_NS02_008
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      x-permissions:
      - product.notification-service.template.list
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
      x-requirements:
      - NOTS-SRS-35
      x-grpc:
        serviceName: NotificationService
        methodName: list
    post:
      tags:
      - NotificationTemplate
      summary: Create Notification Template
      description: "Establishes notification templates in batch to govern a collection\
        \ of functions and microservices that are in use for the deliverable. Use\
        \ for creating a new notification template, which using for sending notification\
        \ to user via SMS, Email, Push Application channels."
      operationId: API-NS01
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateDTO'
        required: true
      responses:
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                NS_UNSUPPORTED_MEDIA_TYPE:
                  $ref: '#/components/examples/NS_UNSUPPORTED_MEDIA_TYPE'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                NS_PARAM_REQUIRED:
                  $ref: '#/components/examples/NS_PARAM_REQUIRED'
                NS_PARAM_INVALID:
                  $ref: '#/components/examples/NS_PARAM_INVALID'
                NS_ENTITY_WITH_DETAIL_NOT_FOUND:
                  $ref: '#/components/examples/NS_ENTITY_WITH_DETAIL_NOT_FOUND'
        "201":
          description: Success response message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplateDTO'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_NS01_001
        description: Authorization header is invalid. Refer to NS_UNAUTHORIZED
      - name: VR_NS01_002
        description: Users must have permission to call API. Refer to NS_PERMISSION_DENIED.
      - name: VR_NS01_003
        description: The request must be in correct content type. Refer to NS_UNSUPPORTED_MEDIA_TYPE.
      - name: VR_NS01_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_NS01_005
        description: category of the notification template already in use. Refer to
          NS_ALREADY_EXISTS.
      - name: VR_NS01_006
        description: category is required. Refer to NS_PARAM_REQUIRED
      - name: VR_NS01_007
        description: orgId is required. Refer to NS_PARAM_REQUIRED
      - name: VR_NS01_008
        description: orgId is required. Refer to NS_PARAM_REQUIRED
      - name: VR_NS01_009
        description: Org ID not found. Refer to NS_OGR_NOT_FOUND
      - name: VR_NS01_0010
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      x-permissions:
      - product.notification-service.template.create
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
      x-requirements:
      - NOTS-SRS-32
      x-grpc:
        serviceName: NotificationService
        methodName: create
  /notifications/templates/{id}:
    get:
      tags:
      - NotificationTemplate
      summary: Get a Notification Template
      description: Get Notification Template API allows get a single notification
        template by Id.
      operationId: API-NS03
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        example: 05e78fe8-0742-11eb-adc1-0242ac120002
      responses:
        "200":
          description: Success response message
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/NotificationTemplateResponseDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_404:
                  $ref: '#/components/examples/ERR_404'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_NS03_001
        description: Authorization header is invalid. Refer to NS_UNAUTHORIZED
      - name: VR_NS03_002
        description: Users must have permission to call API. Refer to UMS_PERMISSION_DENIED.
      - name: VR_NS03_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_NS03_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_NS03_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_NS03_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_NS03_007
        description: "Field observationValueNumeric or observationValueText are mutually\
          \ exclusive, just one of them is required. Refer to ERR_0844."
      - name: VR_NS03_008
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      x-permissions:
      - product.notification-service.template.get
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
      x-grpc:
        serviceName: NotificationService
        methodName: get
    put:
      tags:
      - NotificationTemplate
      summary: Update a Notification Teamplate
      description: Update Notification Teamplate API allows update a Notification
        Teamplate.
      operationId: API-NS04
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        example: 05e78fe8-0742-11eb-adc1-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NotificationTemplateDTO'
        required: true
      responses:
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                NS_UNSUPPORTED_MEDIA_TYPE:
                  $ref: '#/components/examples/NS_UNSUPPORTED_MEDIA_TYPE'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                NS_PARAM_REQUIRED:
                  $ref: '#/components/examples/NS_PARAM_REQUIRED'
                NS_PARAM_INVALID:
                  $ref: '#/components/examples/NS_PARAM_INVALID'
                NS_ENTITY_WITH_DETAIL_NOT_FOUND:
                  $ref: '#/components/examples/NS_ENTITY_WITH_DETAIL_NOT_FOUND'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_404:
                  $ref: '#/components/examples/ERR_404'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NotificationTemplateDTO'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_NS04_001
        description: Authorization header is invalid. Refer to NS_UNAUTHORIZED
      - name: VR_NS04_002
        description: Users must have permission to call API. Refer to UMS_PERMISSION_DENIED.
      - name: VR_NS04_003
        description: The request must be in correct content type. Refer to UMS_UNSUPPORTED_MEDIA_TYPE.
      - name: VR_NS04_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_NS04_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_NS04_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_NS04_007
        description: "Field observationValueNumeric or observationValueText are mutually\
          \ exclusive, just one of them is required. Refer to ERR_0844."
      - name: VR_NS04_008
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      x-permissions:
      - product.notification-service.template.update
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
      x-requirements:
      - NOTS-SRS-34
      x-grpc:
        serviceName: NotificationService
        methodName: update
    delete:
      tags:
      - NotificationTemplate
      summary: Delete Notification Template by ID
      description: Delete Notification Template API allows delete a notification template
        by Id.
      operationId: API-NS05
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        example: 05e78fe8-0742-11eb-adc1-0242ac120002
      responses:
        "200":
          description: Success response message
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                NS_ENTITY_WITH_DETAIL_NOT_FOUND:
                  $ref: '#/components/examples/NS_ENTITY_WITH_DETAIL_NOT_FOUND'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: NS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_NS05_001
        description: Authorization header is invalid. Refer to NS_UNAUTHORIZED
      - name: VR_NS05_002
        description: Users must have permission to call API. Refer to UMS_PERMISSION_DENIED.
      - name: VR_NS05_003
        description: The request must be in correct content type. Refer to UMS_UNSUPPORTED_MEDIA_TYPE.
      - name: VR_NS05_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_NS05_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_NS05_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_NS05_007
        description: "Field observationValueNumeric or observationValueText are mutually\
          \ exclusive, just one of them is required. Refer to ERR_0844."
      - name: VR_NS05_008
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      x-permissions:
      - product.notification-service.template.delete
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
      x-grpc:
        serviceName: NotificationService
        methodName: delete
components:
  schemas:
    NotificationTemplateDTO:
      required:
      - category
      - orgId
      - params
      type: object
      properties:
        category:
          type: string
          description: Notification Template Category
          example: INVITATION_NEW_USER
        orgId:
          type: string
          description: Organization ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        description:
          type: string
          description: Notification Template Description
          example: This is description
        params:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplateParamDTO'
    NotificationTemplateParamDTO:
      required:
      - channel
      - description
      - key
      - type
      - value
      type: object
      properties:
        channel:
          type: string
          description: Notification Channel
          example: SMS
          enum:
          - SMS
          - EMAIL
          - PUSH_APP
        type:
          type: string
          description: Notification Parameter Type
          example: TEXT
        key:
          type: string
          description: Notification Parameter Key
          example: BODY
        value:
          type: string
          description: Notification Parameter Value
          example: This is body of SMS notification
        description:
          type: string
          description: Notification Parameter Description
          example: This is description
    ErrorDetail:
      type: object
      properties:
        severity:
          type: string
        code:
          type: string
        details:
          type: string
    ErrorMessage:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    Pageable:
      type: object
      properties:
        sort:
          $ref: '#/components/schemas/Sort'
        paged:
          type: boolean
        unpaged:
          type: boolean
        pageNumber:
          type: integer
          format: int32
        pageSize:
          type: integer
          format: int32
        offset:
          type: integer
          format: int64
    Sort:
      type: object
      properties:
        sorted:
          type: boolean
        unsorted:
          type: boolean
        empty:
          type: boolean
    NavigationInfoNotificationTemplateResponseDTO:
      type: object
      properties:
        first:
          type: string
          description: url to get first page
          example: api/v2/entity?page=1&size=20
        previous:
          type: string
          description: url to get previous page
          example: api/v2/entity?page=4&size=20
        next:
          type: string
          description: url to get next page
          example: api/v2/entity?page=6&size=20
        last:
          type: string
          description: url to get last page
          example: api/v2/entity?page=11&size=20
    NotificationTemplateParamResponseDTO:
      type: object
      properties:
        id:
          type: string
          description: Notification Parameter ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        type:
          type: string
          description: Notification Parameter Type
          example: TEXT
        key:
          type: string
          description: Notification Parameter Key
          example: BODY
        value:
          type: string
          description: Notification Parameter Value
          example: This is body of SMS notification
        description:
          type: string
          description: Notification Parameter Description
          example: This is description
    NotificationTemplateResponseDTO:
      type: object
      properties:
        id:
          type: string
          description: Notification Parameter ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        category:
          type: string
          description: Notification Template Category
          example: INVITATION_NEW_USER
        orgId:
          type: string
          description: Organization ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        channel:
          type: string
          description: Notification Channel
          example: SMS
          enum:
          - SMS
          - EMAIL
          - PUSH_APP
        description:
          type: string
          description: Notification Template Description
          example: This is description
        params:
          uniqueItems: true
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplateParamResponseDTO'
    PagingInfoNotificationTemplateResponseDTO:
      type: object
      properties:
        totalCount:
          type: integer
          description: Total results count
          format: int64
          example: 215
        data:
          type: array
          items:
            $ref: '#/components/schemas/NotificationTemplateResponseDTO'
        paging:
          $ref: '#/components/schemas/NavigationInfoNotificationTemplateResponseDTO'
    ResponseMessage:
      type: object
      properties:
        success:
          type: boolean
  examples:
    NS_INTERNAL_ERROR:
      summary: NS_INTERNAL_ERROR
      description: The server encountered an unexpected condition that prevented it
        from fulfilling the request..
      value: "{\n  \"issues\": [\n    {\n      \"severity\": \"error\",\n      \"\
        code\" : \"NS_INTERNAL_ERROR\",\n      \"details\" : \"Oops, something went\
        \ wrong! Please contact the server administrator.\"\n    }\n  ]\n}"
    NS_UNSUPPORTED_MEDIA_TYPE:
      summary: NS_UNSUPPORTED_MEDIA_TYPE
      description: Content-type header is missing or is different to application/json
      value: "{\n  \"issues\": [\n    {\n      \"severity\": \"error\",\n      \"\
        code\" : \"NS_UNSUPPORTED_MEDIA_TYPE\",\n      \"details\" : \"Unsupported\
        \ media type.\"\n    }\n  ]\n}"
    NS_BAD_REQUEST:
      summary: NS_BAD_REQUEST
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error
      value: "{\n  \"errors\": [\n    {\n      \"severity\": \"error\",\n      \"\
        code\" : \"NS_BAD_REQUEST\",\n      \"details\" : \"Could not resolve property:\
        \ page.\"\n    }\n  ]\n}"
    NS_NO_EXIST:
      summary: NS_NO_EXIST
      description: The server cannot found any result
      value: "{\n  \"issues\": [\n    {\n      \"issues\": \"error\",\n      \"code\"\
        \ : \"NS_NO_EXIST\",\n      \"details\" : \"{0} is not found!\"\n    }\n \
        \ ]\n}"
    NS_PARAM_REQUIRED:
      summary: NS_PARAM_REQUIRED
      description: Field is required
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"NS_PARAM_REQUIRED\",\n      \"details\" : \"{0} is required.\"\n\
        \    }\n  ]\n}"
    NS_MUST_NOT_BE_LONGER_THAN:
      summary: NS_MUST_NOT_BE_LONGER_THAN
      description: The server will not process the request due to a invalid zip format
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"NS_MUST_NOT_BE_LONGER_THAN\",\n      \"details\" : \"{0} cannot\
        \ be longer than 255 characters.\"\n    }\n  ]\n}"
    NS_FIELDS_MUTUALLY_EXCLUSIVE:
      summary: NS_FIELDS_MUTUALLY_EXCLUSIVE
      description: The server will not process the request due to a field restriction
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"NS_FIELDS_MUTUALLY_EXCLUSIVE\",\n      \"details\" : \"Field {0}\
        \ or {1} is required, please provide one of them; they are mutually exclusive\"\
        \n    }\n  ]\n}"
    NS_UNAUTHORIZED:
      summary: NS_UNAUTHORIZED
      description: The authorization token is missing/invalid
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"NS_UNAUTHORIZED\",\n      \"details\" : \"Not authorized.\"\n \
        \   }\n  ]\n}"
    NS_PERMISSION_DENIED:
      summary: NS_PERMISSION_DENIED
      description: Users must have permission to call API
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"NS_PERMISSION_DENIED\",\n      \"details\" : \"User does not have\
        \ permission to perform the operation on the data.\"\n    }\n  ]\n}"
    NS_PARAM_INVALID:
      summary: NS_PARAM_INVALID
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error (e.g. malformed request syntax)
      value: "{\n  \"issues\": [\n    {\n        \"severity\" : \"error\",\n     \
        \   \"code\" : \"NS_PARAM_INVALID\",\n        \"details\" : \"action is invalid.\"\
        \n    }\n  ]\n}"
    NS_ALREADY_EXISTS:
      summary: NS_ALREADY_EXISTS
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error (e.g. malformed request syntax)
      value: "{\n  \"issues\": [\n    {\n     \"severity\" : \"error\",\n     \"code\"\
        \ : \"NS_ALREADY_EXISTS\",\n     \"message\" : \"The email already exists.\
        \ Please use a different email\"\n    }\n  ]\n}"
    NS_ENTITY_WITH_DETAIL_NOT_FOUND:
      summary: NS_ENTITY_WITH_DETAIL_NOT_FOUND
      description: The server cannot or will not process the request due to it failed
        a business logic.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"NS_ENTITY_WITH_DETAIL_NOT_FOUND\",\n      \"details\" : \"{0} with\
        \ {1} {2} not found.\"\n    }\n  ]\n}"
