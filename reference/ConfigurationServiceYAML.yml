openapi: 3.0.1
info:
  title: Configuration Service
  description: "Configuration Service APIs are a mesh of policies governing functionality\
    \ and microservices in a customer solution. BrightInsight developers use them\
    \ to configure and adjust the behavior of functionality and independent microservices\
    \ as they are packaged for a deliverable, controlling how those objectscommunicate\
    \ with each other and external systems. This allows them to easily implement permissions\
    \ and data policies mapped directly to application behavior outcomes, ensuring\
    \ good end-user experiences. BrightInsight developers typically provide the initial\
    \ configuration and these remain in place once they have been tested and put into\
    \ production."
  version: 1.0.0
  x-safety-class: C
  x-safety-class-description: "the loss of the primary function of the User Schedule\
    \ Service may potentially, worse-case, cause serious injury to the patient."
  x-external-services:
  - name: User Non-PII Service
    use: "used to get user information, status and permissions"
    errorHandling: https://flexdigitalhealth.jamacloud.com/perspective.req#/items/2767849?projectId=103
  - name: Organization Service
    use: used to get organization information and status
    errorHandling: https://flexdigitalhealth.jamacloud.com/perspective.req#/items/3939886?projectId=136
servers:
- url: http://localhost
  description: Generated server url
paths:
  /categories/{id}:
    put:
      tags:
      - Category
      summary: Update Category
      description: Changes category information.
      operationId: API-CS10
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        example: 05e78fe8-0742-11eb-adc1-0242ac120002
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryUpdateDTO'
        required: true
      responses:
        "200":
          description: Success response message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_0801:
                  $ref: '#/components/examples/ERR_0801'
                ERR_0803:
                  $ref: '#/components/examples/ERR_0803'
                CS_DUPLICATED_CATEGORY_NAME:
                  $ref: '#/components/examples/CS_DUPLICATED_CATEGORY_NAME'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_404:
                  $ref: '#/components/examples/ERR_404'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_415:
                  $ref: '#/components/examples/ERR_415'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS10_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS10_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS10_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_CS10_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS10_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_CS10_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_CS10_007
        description: The value in category name is already in use. Refer to CS_DUPLICATED_CATEGORY_NAME
      - name: VR_CS10_008
        description: The server can't find the requested resource. Refer to ERR_404
      x-permissions:
      - product.configuration-service.category.update
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-grpc:
        serviceName: CategoryService
        methodName: update
    patch:
      tags:
      - Category
      summary: Patch Category
      description: Patch Category API allows patch a Category.
      operationId: API-CS11
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryPartialDTO'
        required: true
      responses:
        "200":
          description: Success response message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_0801:
                  $ref: '#/components/examples/ERR_0801'
                ERR_0803:
                  $ref: '#/components/examples/ERR_0803'
                CS_DUPLICATED_CATEGORY_NAME:
                  $ref: '#/components/examples/CS_DUPLICATED_CATEGORY_NAME'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_404:
                  $ref: '#/components/examples/ERR_404'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_415:
                  $ref: '#/components/examples/ERR_415'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS11_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS11_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS11_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_CS11_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS11_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_CS11_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_CS11_007
        description: The value in category name is already in use. Refer to CS_DUPLICATED_CATEGORY_NAME
      - name: VR_CS11_008
        description: The server can't find the requested resource. Refer to ERR_404
      x-permissions:
      - product.configuration-service.category.patch
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-requirements:
      - SCONN-SRS-25
      x-grpc:
        serviceName: CategoryService
        methodName: update
  /categories:
    get:
      tags:
      - Category
      summary: List Categories
      description: Fetches a paged list of categories. Use for looking up a list of
        categories.
      operationId: API-CS08
      parameters:
      - name: page
        in: query
        description: The index of page (1..N)
        schema:
          type: integer
          default: "1"
      - name: size
        in: query
        description: The number of result in a page
        schema:
          type: integer
          default: "10"
      - name: sort
        in: query
        description: "To sort the results in descending or ascending order. Sorting\
          \ criteria in the format: property(,asc|desc). Default sort order is ascending.\
          \ Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagingInfoCategoryDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_400:
                  $ref: '#/components/examples/ERR_400'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS08_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS08_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS08_003
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS08_004
        description: A field or parameters contains the wrong data type. Refer to
          ERR_400
      x-permissions:
      - product.configuration-service.category.list
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PACIENT
      x-grpc:
        serviceName: CategoryService
        methodName: list
    post:
      tags:
      - Category
      summary: Create Category
      description: Establishes a category to which system settings can be assigned.
        Use for categorizing system settings to make them easier to administer.
      operationId: API-CS07
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CategoryCreateDTO'
        required: true
      responses:
        "201":
          description: Success response message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CategoryDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_0801:
                  $ref: '#/components/examples/ERR_0801'
                ERR_0803:
                  $ref: '#/components/examples/ERR_0803'
                CS_DUPLICATED_CATEGORY_NAME:
                  $ref: '#/components/examples/CS_DUPLICATED_CATEGORY_NAME'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_415:
                  $ref: '#/components/examples/ERR_415'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS07_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS07_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS07_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_CS07_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS07_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_CS07_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_CS07_008
        description: The value in category name is already in use. Refer to CS_DUPLICATED_CATEGORY_NAME
      x-permissions:
      - product.configuration-service.category.create
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-grpc:
        serviceName: CategoryService
        methodName: create
  /system-settings/{id}:
    put:
      tags:
      - System Setting
      summary: Update Setting
      description: Update Setting API allows update a Setting.
      operationId: API-CS04
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemSettingUpdateDTO'
        required: true
      responses:
        "200":
          description: Success response message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettingDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_0801:
                  $ref: '#/components/examples/ERR_0801'
                ERR_0804:
                  $ref: '#/components/examples/ERR_0804'
                CS_INVALID_DATA_TYPE:
                  $ref: '#/components/examples/CS_INVALID_DATA_TYPE'
                CS_FIELD_CONDITIONALLY_REQUIRED:
                  $ref: '#/components/examples/CS_FIELD_CONDITIONALLY_REQUIRED'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_404:
                  $ref: '#/components/examples/ERR_404'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_415:
                  $ref: '#/components/examples/ERR_415'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS04_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS04_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS04_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_CS04_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS04_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_CS04_006
        description: Field doesn't have the required length. Refer to ERR_0803.
      - name: VR_CS04_007
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      - name: VR_CS04_008
        description: Field value doesn't match with the given dataType. Refer to CS_INVALID_DATA_TYPE.
      - name: VR_CS04_009
        description: Field value doesn't match with the allowedValues. Refer to CS_VALUE_NOT_ALLOWED.
      x-permissions:
      - product.configuration-service.setting.update
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-grpc:
        serviceName: SettingService
        methodName: update
    delete:
      tags:
      - System Setting
      summary: Delete Setting
      description: Delete Setting API allows delete a single setting by Id.
      operationId: API-CS06
      parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettingDTO'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_404:
                  $ref: '#/components/examples/ERR_404'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS06_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS06_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS06_003
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS06_004
        description: The server can't find the requested resource. Refer to ERR_404
      x-permissions:
      - product.configuration-service.setting.create
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-grpc:
        serviceName: SettingService
        methodName: delete
  /system-settings:
    get:
      tags:
      - System Setting
      summary: List Settings
      description: List Settings API allows get a paged result of settings.
      operationId: API-CS02
      parameters:
      - name: category
        in: query
        required: false
        schema:
          type: string
        example: category A
      - name: page
        in: query
        description: The index of page (1..N)
        schema:
          type: integer
          default: "1"
      - name: size
        in: query
        description: The number of result in a page
        schema:
          type: integer
          default: "10"
      - name: sort
        in: query
        description: "To sort the results in descending or ascending order. Sorting\
          \ criteria in the format: property(,asc|desc). Default sort order is ascending.\
          \ Multiple sort criteria are supported."
        schema:
          type: array
          items:
            type: string
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/PagingInfoSystemSettingDTO'
        "204":
          description: No Content
          content:
            application/json: {}
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_415:
                  $ref: '#/components/examples/ERR_415'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS02_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS02_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS02_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      x-permissions:
      - product.configuration-service.setting.list
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-grpc:
        serviceName: SettingService
        methodName: list
    post:
      tags:
      - System Setting
      summary: Create System Setting
      description: "Establishes system settings in batch to govern a collection of\
        \ functions and microservices that are in use for the deliverable. Use for\
        \ creating a new system setting, which controls the global behavior that can\
        \ be applied to each microservice, such as organization-level override and\
        \ user-level edits, report generation frequency, etc."
      operationId: API-CS01
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SystemSettingCreateDTO'
        required: true
      responses:
        "201":
          description: Success response message
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SystemSettingDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_0801:
                  $ref: '#/components/examples/ERR_0801'
                ERR_0803:
                  $ref: '#/components/examples/ERR_0803'
                CS_INVALID_DATA_TYPE:
                  $ref: '#/components/examples/CS_INVALID_DATA_TYPE'
                CS_VALUE_NOT_ALLOWED:
                  $ref: '#/components/examples/CS_VALUE_NOT_ALLOWED'
                CS_DUPLICATED_SYSTEM_SETTING_KEY:
                  $ref: '#/components/examples/CS_DUPLICATED_SYSTEM_SETTING_KEY'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                ERR_415:
                  $ref: '#/components/examples/ERR_415'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "401"
                    message: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "403"
                    message: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request..
          content:
            application/json:
              schema:
                example:
                  errors:
                  - code: "500"
                    message: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_CS01_001
        description: "The request lacks valid authentication credentials: blank authorization,\
          \ missing authorization, expired user's tokenId. Refer to ERR_401."
      - name: VR_CS01_002
        description: Login user has no permission. Refer to ERR_403.
      - name: VR_CS01_003
        description: Invalid Content-Type value. Refer to ERR_415.
      - name: VR_CS01_004
        description: The server encountered an unexpected condition. Refer to ERR_500.
      - name: VR_CS01_005
        description: A mandatory field is null. Refer to ERR_0801
      - name: VR_CS01_006
        description: Field doesn't have the required length. Refer to ERR_0804.
      - name: VR_CS01_007
        description: Field doesn't have a valid range value. Refer to ERR_34802.
      - name: VR_CS01_008
        description: Field value doesn't match with the given dataType. Refer to CS_INVALID_DATA_TYPE.
      - name: VR_CS01_009
        description: Field value doesn't match with the allowedValues. Refer to CS_VALUE_NOT_ALLOWED.
      - name: VR_CS01_010
        description: System setting key is already taken. Refer to CS_DUPLICATED_SYSTEM_SETTING_KEY.
      x-permissions:
      - product.configuration-service.setting.create
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      x-grpc:
        serviceName: com.brightinsight.platform.service.configuration.business.SystemSettingService
        methodName: create
components:
  schemas:
    CategoryPartialDTO:
      type: object
      properties:
        id:
          type: string
          description: Category ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        name:
          type: string
          description: Category name
          example: name
        description:
          type: string
          description: Category description
          example: description
    CategoryDTO:
      required:
      - name
      type: object
      properties:
        id:
          type: string
          description: Category ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        name:
          type: string
          description: Category name
          example: name
        description:
          type: string
          description: Category description
          example: description
    ErrorDetail:
      type: object
      properties:
        code:
          type: string
        field:
          type: string
        message:
          type: string
    ErrorMessage:
      type: object
      properties:
        errors:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    CategoryUpdateDTO:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Category name
          example: name
        description:
          type: string
          description: Category description
          example: description
    NavigationInfoCategoryDTO:
      type: object
      properties:
        first:
          type: string
          description: url to get first page
          example: api/v2/entity?page=1&size=20
        previous:
          type: string
          description: url to get previous page
          example: api/v2/entity?page=4&size=20
        next:
          type: string
          description: url to get next page
          example: api/v2/entity?page=6&size=20
        last:
          type: string
          description: url to get last page
          example: api/v2/entity?page=11&size=20
    PagingInfoCategoryDTO:
      type: object
      properties:
        totalCount:
          type: integer
          description: Total results count
          format: int64
          example: 215
        data:
          type: array
          items:
            $ref: '#/components/schemas/CategoryDTO'
        paging:
          $ref: '#/components/schemas/NavigationInfoCategoryDTO'
    CategoryCreateDTO:
      required:
      - name
      type: object
      properties:
        name:
          type: string
          description: Category name
          example: name
        description:
          type: string
          description: Category description
          example: description
    SystemSettingUpdateDTO:
      required:
      - dataType
      type: object
      properties:
        value:
          type: string
          description: System Setting Value
          example: WEEKLY
        dataType:
          type: string
          description: System Setting Data Type
          example: ENUMERATION
          enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - DATETIME
          - DATE
        description:
          type: string
          description: System Setting Description
          example: This setting changes the report generation frequency.
        allowOverride:
          type: boolean
          description: System Setting Allow Override
          example: false
        allowedValues:
          type: array
          description: List of allowed values
          example:
          - DAILY
          - WEEKLY
          - MONTHLY
          items:
            type: string
            description: List of allowed values
            example: "[\"DAILY\",\"WEEKLY\",\"MONTHLY\"]"
        categories:
          type: array
          description: List of associated categories
          example:
          - 8ac14808-422a-11eb-b378-0242ac130002
          - 8fab1d08-422a-11eb-b378-0242ac130002
          items:
            type: string
            description: List of associated categories
            format: uuid
    SystemSettingDTO:
      required:
      - dataType
      - key
      type: object
      properties:
        id:
          type: string
          description: System Setting ID
          format: uuid
          example: 05e78fe8-0742-11eb-adc1-0242ac120002
        key:
          type: string
          description: System Setting Key
          example: REPORT_INTERVAL
        value:
          type: string
          description: System Setting Value
          example: WEEKLY
        dataType:
          type: string
          description: System Setting Data Type
          example: ENUMERATION
          enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - DATETIME
          - DATE
        description:
          type: string
          description: System Setting Description
          example: This setting changes the report generation frequency.
        allowOverride:
          type: boolean
          description: System Setting Allow Override
          example: false
        allowedValues:
          type: array
          description: List of allowed values
          example:
          - DAILY
          - WEEKLY
          - MONTHLY
          items:
            type: string
            description: List of allowed values
            example: "[\"DAILY\",\"WEEKLY\",\"MONTHLY\"]"
      description: this is the description on the schema
    NavigationInfoSystemSettingDTO:
      type: object
      properties:
        first:
          type: string
          description: url to get first page
          example: api/v2/entity?page=1&size=20
        previous:
          type: string
          description: url to get previous page
          example: api/v2/entity?page=4&size=20
        next:
          type: string
          description: url to get next page
          example: api/v2/entity?page=6&size=20
        last:
          type: string
          description: url to get last page
          example: api/v2/entity?page=11&size=20
    PagingInfoSystemSettingDTO:
      type: object
      properties:
        totalCount:
          type: integer
          description: Total results count
          format: int64
          example: 215
        data:
          type: array
          items:
            $ref: '#/components/schemas/SystemSettingDTO'
        paging:
          $ref: '#/components/schemas/NavigationInfoSystemSettingDTO'
    SystemSettingCreateDTO:
      required:
      - dataType
      - key
      type: object
      properties:
        key:
          type: string
          description: System Setting Key
          example: REPORT_INTERVAL
        value:
          type: string
          description: System Setting Value
          example: WEEKLY
        dataType:
          type: string
          description: System Setting Data Type
          example: ENUMERATION
          enum:
          - STRING
          - INTEGER
          - FLOAT
          - BOOLEAN
          - DATETIME
          - DATE
        description:
          type: string
          description: System Setting Description
          example: This setting changes the report generation frequency.
        allowOverride:
          type: boolean
          description: System Setting Allow Override
          example: false
        allowedValues:
          type: array
          description: List of allowed values
          example:
          - DAILY
          - WEEKLY
          - MONTHLY
          items:
            type: string
            description: List of allowed values
            example: "[\"DAILY\",\"WEEKLY\",\"MONTHLY\"]"
        categories:
          type: array
          description: List of associated categories
          example:
          - 8ac14808-422a-11eb-b378-0242ac130002
          - 8fab1d08-422a-11eb-b378-0242ac130002
          items:
            type: string
            description: List of associated categories
            format: uuid
  examples:
    ERR_415:
      summary: ERR_415
      description: Content-type header is missing or is different to application/json
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_415\",\n      \"message\"\
        : \"Unsupported media type.\"\n    }\n  ]\n}"
    ERR_400:
      summary: ERR_400
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_400\",\n      \"message\"\
        : \"Could not resolve property: page.\"\n    }\n  ]\n}"
    ERR_404:
      summary: ERR_404
      description: The server cannot found any result
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_404\",\n      \"message\"\
        : \"{0} is not found!\"\n    }\n  ]\n}"
    ERR_0801:
      summary: ERR_0801
      description: Field is required
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_0801\",\n      \"field\"\
        : \"{0}\",\n      \"message\": \"{0} is required.\"\n    }\n  ]\n}"
    ERR_0803:
      summary: ERR_0803
      description: The server will not process the request due to a invalid zip format
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_0803\",\n      \"field\"\
        : \"{0}\",\n      \"message\": \"{0} cannot be longer than 255 characters.\"\
        \n    }\n  ]\n}"
    ERR_0804:
      summary: ERR_0804
      description: The server will not process the request due to a invalid field
        length
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_0804\",\n      \"field\"\
        : \"{0}\",\n      \"message\": \"value must be between {0} and {1}.\"\n  \
        \  }\n  ]\n}"
    ERR_0844:
      summary: ERR_0844
      description: The server will not process the request due to a field restriction
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_0844\",\n      \"message\"\
        : \"Field {0} or {1} is required, please provide one of them; they are mutually\
        \ exclusive\"\n    }\n  ]\n}"
    ERR_34802:
      summary: ERR_34802
      description: Invalid setting range high
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"ERR_34802\",\n      \"\
        field\": \"{0}\",\n      \"message\": \"{0} is not higher than setting range\
        \ low\"\n    }\n  ]\n}"
    CS_DUPLICATED_CATEGORY_NAME:
      summary: CS_DUPLICATED_CATEGORY_NAME
      description: The value in category name is already in use by another Category.
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"CS_DUPLICATED_CATEGORY_NAME\"\
        ,\n      \"field\": \"{0}\",\n      \"message\": \"The value {0} for category\
        \ name is already in use.\"\n    }\n  ]\n}"
    CS_DUPLICATED_SYSTEM_SETTING_KEY:
      summary: CS_DUPLICATED_SYSTEM_SETTING_KEY
      description: The value in system setting key is already in use by another system
        setting.
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"CS_DUPLICATED_SYSTEM_SETTING_KEY\"\
        ,\n      \"field\": \"{0}\",\n      \"message\": \"The value {0} for system\
        \ setting key is already in use.\"\n    }\n  ]\n}"
    CS_FIELD_CONDITIONALLY_REQUIRED:
      summary: CS_FIELD_CONDITIONALLY_REQUIRED
      description: The field must not be empty given a condition.
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"CS_FIELD_CONDITIONALLY_REQUIRED\"\
        ,\n      \"field\": \"{0}\",\n      \"message\": \"The {1} must not be empty\
        \ when {2} is equals to {3}\"\n    }\n  ]\n}"
    CS_INVALID_DATA_TYPE:
      summary: CS_INVALID_DATA_TYPE
      description: The value doesn't match with the expected dataType.
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"CS_INVALID_DATA_TYPE\"\
        ,\n      \"field\": \"{0}\",\n      \"message\": \"{4} in field value doesnt\
        \ match dataType\"\n    }\n  ]\n}"
    CS_VALUE_NOT_ALLOWED:
      summary: CS_VALUE_NOT_ALLOWED
      description: The value doesn't match with the allowedValues.
      value: "{\n  \"errors\": [\n    {\n      \"code\": \"CS_VALUE_NOT_ALLOWED\"\
        ,\n      \"field\": \"value\",\n      \"message\": \"The value {3} in field\
        \ value does not match with allowedValues\"\n    }\n  ]\n}"
