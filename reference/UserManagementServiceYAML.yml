openapi: 3.0.1
info:
  title: User Management Service
  description:  User Management Service APIs govern the creation of end-users
    in the application, including how they are invited to use it, and once 
    they are onboarded, these APIs also control how users can update their 
    passwords and profile info. Developers use these APIs to configure 
    and adjust three types of functionality:
    
   -User Provisioning: the assignment of user roles to an end-user of a 
    microservice.
    
   -User Onboarding: the process of inviting an end-user to access and 
    register for the microservice, and managing invitation status.
    
   -Password and Profile Management: enables user to change and reset 
    passwords and profile info and  governs password expiration behavior.

    These APIs allow application developers to easily set behavior for user 
    management independently of other APIs, ensuring good and consistent 
    end-user experiences. Developers typically provide the initial 
    configuration and these remain in place once they have been tested and 
    put into production.
  version: 1.0.0
  x-safety-class: C
  x-safety-class-description: "the loss of the primary function of the User Schedule\
    \ Service may potentially, worst-case, cause serious injury to the patient."
  x-external-services:
  - name: Invitation Service
    use: used to get user invitations managed by the system
    errorHandling: https://flexdigitalhealth.jamacloud.com/perspective.req#/items/2767849?projectId=220
servers:
- url: http://localhost
  description: Generated server url
paths:
  /api/v2/invitations/user-registration/{invitation-code}/action:
    post:
      tags:
      - invitation-controller
      summary: Accept invitation registration API
      description: Allows the creation of a new, single user in the system. Acts on an existing invitation so the end-user gets provisioned in the platform. Use for provisioning new end-users so they can use the customer application.
      operationId: API-UM2
      parameters:
      - name: invitation-code
        in: path
        required: true
        schema:
          type: string
      - name: action
        in: query
        required: false
        schema:
          type: string
          default: accept
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AcceptInvitationDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/AcceptInvitationDTO'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_PARAM_REQUIRED:
                  $ref: '#/components/examples/UMS_PARAM_REQUIRED'
                UMS_PARAM_INVALID:
                  $ref: '#/components/examples/UMS_PARAM_INVALID'
                UMS_MUST_BE_IN_PAST:
                  $ref: '#/components/examples/UMS_MUST_BE_IN_PAST'
                UMS_EMAIL_FORMAT:
                  $ref: '#/components/examples/UMS_EMAIL_FORMAT'
                UMS_ALREADY_EXISTS:
                  $ref: '#/components/examples/UMS_ALREADY_EXISTS'
                UMS_PASSWORD_POLICY:
                  $ref: '#/components/examples/UMS_PASSWORD_POLICY'
                UMS_CODE_EXPIRED:
                  $ref: '#/components/examples/UMS_CODE_EXPIRED'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_UNSUPPORTED_MEDIA_TYPE:
                  $ref: '#/components/examples/UMS_UNSUPPORTED_MEDIA_TYPE'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_UM2_001
        description: The server encountered an unexpected condition that prevented
          it from fulfilling the request. Refer to UMS_INTERNAL_ERROR.
      - name: VR_UM2_002
        description: email is required. Refer to UMS_PARAM_REQUIRED
      - name: VR_UM2_003
        description: email must be the same with the email in the invitation UMS_PARAM_INVALID
      - name: VR_UM2_004
        description: "Format of email must be correct email format Regex: ^[\\w!#$%&'*+/=?`{|}~^-]+(?:\\\
          .[\\w!#$%&'*+/=?`{|}~^-]+)*@(?:[a-zA-Z0-9-]+\\.)+[a-zA-Z]{2,6}$. Refer to\
          \ UMS_EMAIL_FORMAT"
      - name: VR_UM2_005
        description: "mobilePhone regex is: {0} Refer to UMS_PARAM_INVALID"
      - name: VR_UM2_006
        description: birthDate of the user must be in the past. Refer to UMS_MUST_BE_IN_PAST
      - name: VR_UM2_007
        description: email of the user not already in use. Refer to UMS_ALREADY_EXISTS.
      - name: VR_UM2_008
        description: userName of the user not already in use. Refer to UMS_ALREADY_EXISTS.
      - name: VR_UM2_009
        description: phone number is a valid number. Refer to UMS_PARAM_INVALID.
      - name: VR_UM2_010
        description: mobilePhone must be the same with the phone in the invitation
          UMS_PARAM_INVALID
      - name: VR_UM2_011
        description: The request must be incorrect content type. Refer to UMS_UNSUPPORTED_MEDIA_TYPE
      - name: VR_UM2_012
        description: action is invalid. Refer to UMS_PARAM_INVALID
      - name: VR_UM2_013
        description: invitation code is expired. Refer to UMS_CODE_EXPIRED.
      - name: VR_UM2_014
        description: invitation code is not found or already accepted/declined/canceled.
          Refer to UMS_PARAM_INVALID.
      - name: VR_UM2_015
        description: password fails validation. Refer to UMS_PASSWORD_INVALID.
      x-permissions:
      - user-management.invitations.user-registration.action
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
  /api/v2/invitations/{invitation-code}:
    delete:
      tags:
      - invitation-controller
      summary: Cancel Invitation API
      description: Changes the invitation status to CANCELLED. Use for cancelling an invitation so a user can no longer access the customer application to register.
      operationId: API-UM5
      parameters:
      - name: invitation-code
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_INVITATION_CODE_INVALID:
                  $ref: '#/components/examples/UMS_INVITATION_CODE_INVALID'
                UMS_SYS_PARAM_CATEGORY_NOT_FOUND:
                  $ref: '#/components/examples/UMS_SYS_PARAM_CATEGORY_NOT_FOUND'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendInvitationDTO'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_UNSUPPORTED_MEDIA_TYPE:
                  $ref: '#/components/examples/UMS_UNSUPPORTED_MEDIA_TYPE'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_UM5_001
        description: The authorization token is missing/invalid. Refer to UMS_UNAUTHORIZED.
      - name: VR_UM5_002
        description: Users must have permission to call API. Refer to UMS_PERMISSION_DENIED.
      - name: VR_UM5_003
        description: The server encountered an unexpected condition that prevented
          it from fulfilling the request. Refer to UMS_INTERNAL_ERROR.
      - name: VR_UM5_004
        description: Invitation is accepted/declined/canceled. Refer to UMS_INVITATION_WRONG_STATUS.
      - name: VR_UM5_005
        description: Invitation does not exist. Refer to UMS_INVITATION_NOT_FOUND.
      x-permissions:
      - user-management.invitations.cancel
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PACIENT
  /api/v2/invitations/{invitation-code}/reinvite:
    put:
      tags:
      - invitation-controller
      summary: Re-invite API
      description: Extends an invitation by recalculating the expiration date of the invitation. Use for e xtending the end-date of the invitation to give the end-user more time to accept it.
      operationId: API-UM3
      parameters:
      - name: invitation-code
        in: path
        required: true
        schema:
          type: string
      responses:
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_INVITATION_CODE_INVALID:
                  $ref: '#/components/examples/UMS_INVITATION_CODE_INVALID'
                UMS_SYS_PARAM_CATEGORY_NOT_FOUND:
                  $ref: '#/components/examples/UMS_SYS_PARAM_CATEGORY_NOT_FOUND'
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ExtendInvitationDTO'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_UNSUPPORTED_MEDIA_TYPE:
                  $ref: '#/components/examples/UMS_UNSUPPORTED_MEDIA_TYPE'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_UM3_001
        description: The authorization token is missing/invalid. Refer to UMS_UNAUTHORIZED.
      - name: VR_UM3_002
        description: Users must have permission to call API. Refer to UMS_PERMISSION_DENIED.
      - name: VR_UM3_003
        description: The server encountered an unexpected condition that prevented
          it from fulfilling the request. Refer to UMS_INTERNAL_ERROR.
      - name: VR_UM3_004
        description: Invitation is accepted/declined/canceled. Refer to UMS_INVITATION_WRONG_STATUS.
      - name: VR_UM3_005
        description: Template not found. Refer to UMS_TEMPLATE_NOT_FOUND
      - name: VR_UM3_006
        description: Invitation does not exist. Refer to UMS_INVITATION_NOT_FOUND.
      x-permissions:
      - user-management.invitations.reinvite
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PACIENT
  /api/v2/reset-password:
    post:
      tags:
      - password-controller
      summary: Reset password API
      description: Lets a user change the password when current password is unknown (forgotten, for example). Use for enabling users to enter a new password without having to enter the old one.\
      # Note: Resetting a password differs from changing a password. The Change Password API, by contrast, expects to receive both the current and new passwords in the request payload (which means the user must know current password, but wants to change it). Reset password will let a user change the password when current password is unknown (forgotten, for example).
      operationId: API-UM8
      parameters:
      - name: apikey
        in: header
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResetPasswordDTO'
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResponseMessage'
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_PARAM_REQUIRED:
                  $ref: '#/components/examples/UMS_PARAM_REQUIRED'
                UMS_PARAM_INVALID:
                  $ref: '#/components/examples/UMS_PARAM_INVALID'
                UMS_ENTITY_WITH_DETAIL_NOT_FOUND:
                  $ref: '#/components/examples/UMS_ENTITY_WITH_DETAIL_NOT_FOUND'
                UMS_PHONE_NOT_FOUND_FOR_USER:
                  $ref: '#/components/examples/UMS_PHONE_NOT_FOUND_FOR_USER'
                UMS_UNABLE_SEND_MESSAGE:
                  $ref: '#/components/examples/UMS_UNABLE_SEND_MESSAGE'
        "415":
          description: Unsupported Media Type
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorMessage'
              examples:
                UMS_UNSUPPORTED_MEDIA_TYPE:
                  $ref: '#/components/examples/UMS_UNSUPPORTED_MEDIA_TYPE'
        "401":
          description: The request has not been applied because it lacks valid authentication
            credentials for the target resource.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_AUTH_REQUIRED
                    details: The request has not been applied because it lacks valid
                      authentication credentials for the target resource.
        "403":
          description: The server understood the request but refuses to authorize
            it.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_PERMISSION_DENIED
                    details: The server understood the request but refuses to authorize
                      it.
        "500":
          description: The server encountered an unexpected condition that prevented
            it from fulfilling the request.
          content:
            application/json:
              schema:
                example:
                  issues:
                  - severity: error
                    code: UMS_INTERNAL_ERROR
                    details: "Oops, something went wrong! Please contact the server\
                      \ administrator."
      x-validation-rules:
      - name: VR_UM8_001
        description: deliveryTo is required. Refer to UMS_PARAM_REQUIRED
      - name: VR_UM8_002
        description: action is required. Refer to UMS_PARAM_REQUIRED
      - name: VR_UM8_003
        description: deliveryMethod is required. Refer to UMS_PARAM_REQUIRED
      - name: VR_UM8_004
        description: deliveryMethod is invalid. Refer to UMS_PARAM_INVALID
      - name: VR_UM8_005
        description: "If deliveryMethod is SMS, the user must have a  mobile phone\
          \ number. Refer to UMS_PHONE_NOT_FOUND_FOR_USER"
      - name: VR_UM8_006
        description: If Platform cannot send SMS to mobile phone number. Refer to
          UMS_UNABLE_SEND_MESSAGE
      - name: VR_UM8_007
        description: "Action must be one of {\"initiateReset\", \"verifyToken\" ,\
          \ \"performReset\"}. Refer to UMS_PARAM_INVALID"
      - name: VR_UM8_008
        description: The server encountered an unexpected condition that prevented
          it from fulfilling the request. Refer to UMS_INTERNAL_ERROR.
      - name: VR_UM8_009
        description: The request must be in correct content type. Refer to UMS_UNSUPPORTED_MEDIA_TYPE.
      - name: VR_UM8_010
        description: resetPasswordTemplate is required. Refer to UMS_PARAM_REQUIRED
      - name: VR_UM8_011
        description: resetPasswordTemplate must exist. Refer to UMS_ENTITY_WITH_DETAIL_NOT_FOUND
      - name: VR_UM8_012
        description: resetPasswordCompletedTemplate is required. Refer to UMS_PARAM_REQUIRED
      - name: VR_UM8_013
        description: resetPasswordCompletedTemplate must exist. Refer to UMS_ENTITY_WITH_DETAIL_NOT_FOUND
      - name: VR_UM8_014
        description: token is invalid. Refer to UMS_PARAM_INVALID.
      - name: VR_UM8_015
        description: password fails validation. Refer to UMS_PASSWORD_POLICY.
      x-permissions:
      - n/a
      x-is-external: "true"
      x-roles:
      - IT_ADMIN
      - PATIENT
components:
  schemas:
    AcceptInvitationDTO:
      required:
      - birthDate
      - email
      - mobilePhone
      - password
      type: object
      properties:
        userDid:
          type: string
          description: User Did
          example: 101fc21e-0742-11eb-adc1-0242ac120002
        userName:
          type: string
          description: "UserName of the user , should not exist on the platform at\
            \ time of creation"
          example: demo001
        password:
          type: string
          description: "user password , must comply with password policy"
          example: Passw)rd123
        email:
          type: string
          description: "user email , should be a valid email , one of email or mobilePhone\
            \ should be present"
          example: David@mail.com
        mobilePhone:
          type: string
          description: "user phone , should be a valid phone , one of mobilePhone\
            \ or email should be present"
          example: +11123456789
        gender:
          type: string
          description: user gender
          example: male
        birthDate:
          type: string
          description: "birth date of the user , the date should be in past"
          example: 1990/01/01
        maritalStatus:
          type: string
          description: The maritual statuos of the user
          example: S
        multipleBirthBoolean:
          type: boolean
          example: false
        multipleBirthInteger:
          type: string
          format: byte
        photo1:
          type: string
        photo2:
          type: string
        communication:
          type: string
          description: languages used by the user
          example: "[{\"language\":\"en-GB\",\"preferred\":true}]"
        status:
          type: string
          description: the status of the user in the platform
          example: active
        timezone:
          type: string
          description: the timezone of the user
          example: UTC
        nationality:
          type: string
          description: Nationality of the user
          example: English
        birthplace:
          type: string
        address:
          type: array
          description: a list of addresses for the user
          items:
            $ref: '#/components/schemas/AddressDTO'
        identifier:
          type: array
          description: a list of identifiers for the user
          items:
            $ref: '#/components/schemas/IdentifierDTO'
        name:
          type: array
          description: a list of names for the user
          items:
            $ref: '#/components/schemas/HumanNameDTO'
        telecom:
          type: array
          description: a list of communication options for the user
          items:
            $ref: '#/components/schemas/ContactPointDTO'
    AddressDTO:
      type: object
      properties:
        addressId:
          type: string
          description: the id of the created address
          example: "1234"
        use:
          type: string
          description: usage or type of address
          example: home
        type:
          type: string
          example: both
        text:
          type: string
          description: description of the current address
          example: my home address
        line:
          type: string
          example: "Street ABC, 123"
        city:
          type: string
          description: city of the address
          example: San Francisco
        district:
          type: string
          description: district of the address
          example: District 1
        state:
          type: string
          description: address state
          example: CA
        postalCode:
          type: string
          description: address postal code
          example: "123456"
        country:
          type: string
          description: address country
          example: US
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      description: a list of addresses for the user
    ContactPointDTO:
      type: object
      properties:
        telecomId:
          type: string
          description: the Id of the created Telecom
          example: "12357"
        system:
          type: string
          description: System of the telecom
          example: phone
        value:
          type: string
          description: telecom value
          example: "123456789"
        use:
          type: string
          description: use of the telecom
          example: home
        rank:
          type: string
          description: rank of the telecom
          format: byte
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      description: a list of communication options for the user
    HumanNameDTO:
      type: object
      properties:
        nameId:
          type: string
          description: Id of the created human or user's name
          example: "123456"
        use:
          type: string
          description: usage or type of the user's name
          example: official
        text:
          type: string
          description: text of the user's name
          example: David Smith
        family:
          type: string
          description: family name
          example: Smith
        given:
          type: string
          description: first or given name
          example: David
        prefix:
          type: string
        suffix:
          type: string
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
      description: a list of names of the user
    IdentifierDTO:
      type: object
      properties:
        identifierId:
          type: string
          description: Id of the created identifier
          example: "1234"
        use:
          type: string
          description: usage of the identifier
          example: official
        type:
          type: string
          description: type of identifier
          example: DL
        system:
          type: string
          description: system of the identifier
          example: https://www.dmv.ca.gov/portal/driver-licenses-identification-cards/
        value:
          type: string
          description: value of the identifier
          example: "123456789"
        startTime:
          type: string
          format: date-time
        endTime:
          type: string
          format: date-time
        assigner:
          type: string
          description: assigner of the identifier
          example: State of California DMV
      description: a list of identifiers of the user
    ErrorDetail:
      type: object
      properties:
        severity:
          type: string
        code:
          type: string
        details:
          type: string
    ErrorMessage:
      type: object
      properties:
        issues:
          type: array
          items:
            $ref: '#/components/schemas/ErrorDetail'
    ExtendInvitationDTO:
      type: object
      properties:
        id:
          type: string
        code:
          type: string
        email:
          type: string
        phone:
          type: string
        userDid:
          type: string
        expirationDate:
          type: string
          format: date-time
        roleName:
          type: string
        orgID:
          type: string
        status:
          type: string
          enum:
          - PENDING
          - SENT
          - APPROVED
          - ACCEPTED
          - DECLINED
          - EXTENDED
          - RESENT
          - CANCELED
    ResetPasswordDTO:
      required:
      - action
      - deliveryMethod
      - deliveryTo
      - password
      - resetPasswordCompletedTemplate
      - resetPasswordTemplate
      - token
      type: object
      properties:
        action:
          type: string
          description: "should be one of: initiateReset, validateToken, performReset"
          example: initiateReset
        deliveryTo:
          type: string
          description: mobilePhone or email of the user
          example: +123456789
        deliveryMethod:
          type: string
          description: "Must be one of EMAIL , SMS"
          example: SMS
        resetPasswordTemplate:
          type: string
          description: "name of the template that is used to send the reset password\
            \ email/sms , must exists in the system settin , requires executing initiateReset\
            \ action"
          example: EMAIL_RESET_TEMPLATE
        resetPasswordCompletedTemplate:
          type: string
          description: "name of the template that is used to send the completed reset\
            \ password flow for sms/email, must exist in the system setting ,\
            \ requires executing initiateReset action"
          example: EMAIL_RESET_COMPLETION_TEMPLATE
        token:
          type: string
          description: "the reset password token, must not be null or empty and not\
            \ expired, requires executing validateToken and performReset action"
          example: "123456788"
        password:
          type: string
          description: "the user new password, should comply with password policy\
            \ , requires executing performReset action"
          example: newPass)rd01
    ResponseMessage:
      type: object
      properties:
        success:
          type: boolean
          description: boolean value indicating the result of the operation
          example: true
  examples:
    UMS_INTERNAL_ERROR:
      summary: UMS_INTERNAL_ERROR
      description: The server encountered an unexpected condition that prevented it
        from fulfilling the request.
      value: "{\n  \"issues\": [\n    {\n      \"severity\": \"error\",\n      \"\
        code\" : \"UMS_INTERNAL_ERROR\",\n      \"details\" : \"Oops, something went\
        \ wrong! Please contact the server administrator.\"\n    }\n  ]\n}"
    UMS_UNSUPPORTED_MEDIA_TYPE:
      summary: UMS_UNSUPPORTED_MEDIA_TYPE
      description: Content-type header is missing or is different to application/json
      value: "{\n  \"issues\": [\n    {\n      \"severity\": \"error\",\n      \"\
        code\" : \"UMS_UNSUPPORTED_MEDIA_TYPE\",\n      \"details\" : \"Unsupported\
        \ media type.\"\n    }\n  ]\n}"
    UMS_BAD_REQUEST:
      summary: UMS_BAD_REQUEST
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error
      value: "{\n  \"errors\": [\n    {\n      \"severity\": \"error\",\n      \"\
        code\" : \"UMS_BAD_REQUEST\",\n      \"details\" : \"Could not resolve property:\
        \ page.\"\n    }\n  ]\n}"
    UMS_NO_EXIST:
      summary: UMS_NO_EXIST
      description: The server cannot find any result
      value: "{\n  \"issues\": [\n    {\n      \"issues\": \"error\",\n      \"code\"\
        \ : \"UMS_NO_EXIST\",\n      \"details\" : \"{0} is not found!\"\n    }\n\
        \  ]\n}"
    UMS_PARAM_REQUIRED:
      summary: UMS_PARAM_REQUIRED
      description: Field is required
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_PARAM_REQUIRED\",\n      \"details\" : \"{0} is required.\"\
        \n    }\n  ]\n}"
    UMS_MUST_NOT_BE_LONGER_THAN:
      summary: UMS_MUST_NOT_BE_LONGER_THAN
      description: The server will not process the request due to a invalid zip format
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_MUST_NOT_BE_LONGER_THAN\",\n      \"details\" : \"{0} cannot\
        \ be longer than 255 characters.\"\n    }\n  ]\n}"
    UMS_FIELDS_MUTUALLY_EXCLUSIVE:
      summary: UMS_FIELDS_MUTUALLY_EXCLUSIVE
      description: The server will not process the request due to a field restriction
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_FIELDS_MUTUALLY_EXCLUSIVE\",\n      \"details\" : \"Field {0}\
        \ or {1} is required, please provide one of them; they are mutually exclusive\"\
        \n    }\n  ]\n}"
    UMS_UNAUTHORIZED:
      summary: UMS_UNAUTHORIZED
      description: The authorization token is missing/invalid
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_UNAUTHORIZED\",\n      \"details\" : \"Not authorized.\"\n\
        \    }\n  ]\n}"
    UMS_PERMISSION_DENIED:
      summary: UMS_PERMISSION_DENIED
      description: Users must have permission to call API
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_PERMISSION_DENIED\",\n      \"details\" : \"User does not have\
        \ permission to perform the operation on the data.\"\n    }\n  ]\n}"
    UMS_PARAM_INVALID:
      summary: UMS_PARAM_INVALID
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error (e.g. malformed request syntax)
      value: "{\n  \"issues\": [\n    {\n        \"severity\" : \"error\",\n     \
        \   \"code\" : \"UMS_PARAM_INVALID\",\n        \"details\" : \"action is invalid.\"\
        \n    }\n  ]\n}"
    UMS_MUST_BE_IN_PAST:
      summary: UMS_MUST_BE_IN_PAST
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error (e.g. malformed request syntax)
      value: "{\n  \"errors\": [\n    {\n     \"severity\": \"error\",\n     \"code\"\
        \ : \"UMS_MUST_BE_IN_PAST\",\n     \"details\" : \"dateOfBirth must be in\
        \ the past.\"\n    }\n  ]\n}"
    UMS_EMAIL_FORMAT:
      summary: UMS_EMAIL_FORMAT
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error (e.g. malformed request syntax)
      value: "{\n  \"issues\": [\n    {\n     \"severity\" : \"error\",\n     \"code\"\
        \ : \"UMS_EMAIL_FORMAT\",\n     \"details\" : \"email has to be a well-formed\
        \ email address.\"\n    }\n  ]\n}"
    UMS_ALREADY_EXISTS:
      summary: UMS_ALREADY_EXISTS
      description: The server cannot or will not process the request due to something
        that is perceived to be a client error (e.g. malformed request syntax)
      value: "{\n  \"issues\": [\n    {\n     \"severity\" : \"error\",\n     \"code\"\
        \ : \"UMS_ALREADY_EXISTS\",\n     \"message\" : \"The email already exists.\
        \ Please use a different email\"\n    }\n  ]\n}"
    UMS_PASSWORD_POLICY:
      summary: UMS_PASSWORD_POLICY
      description: The server cannot or will not process the request due to it failed
        a business logic.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_PASSWORD_POLICY\",\n      \"details\" : “1) Your password must\
        \ be between 8 and 128 characters. 2) Your password must contain at least\
        \ one uppercase or capital letter (e.g.: A, B, etc.) 3) Your password must\
        \ contain at least one lowercase letter. 4) Your password must contain at\
        \ least one special character (e.g.: !,@,#,$,^)\"\n    }\n  ]\n}"
    UMS_CODE_EXPIRED:
      summary: UMS_CODE_EXPIRED
      description: The server cannot or will not process the request because it failed
        a business logic.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_CODE_EXPIRED\",\n      \"details\" : \"invitation-code is expired.\"\
        \n    }\n  ]\n}"
    UMS_INVITATION_WRONG_STATUS:
      summary: UMS_INVITATION_WRONG_STATUS
      description: Invitation is accepted/declined/canceled.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_INVITATION_WRONG_STATUS\",\n      \"details\" : \"Invitation\
        \ is accepted/declined/canceled.\"\n    }\n  ]\n}"
    UMS_TEMPLATE_NOT_FOUND:
      summary: UMS_TEMPLATE_NOT_FOUND
      description: Template not found.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_TEMPLATE_NOT_FOUND\",\n      \"details\" : \"Template not found.\"\
        \n    }\n  ]\n}"
    UMS_INVITATION_NOT_FOUND:
      summary: UMS_INVITATION_NOT_FOUND
      description: Invitation does not exist.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_INVITATION_NOT_FOUND\",\n      \"details\" : \"Invitation does\
        \ not exist.\"\n    }\n  ]\n}"
    UMS_PHONE_NOT_FOUND_FOR_USER:
      summary: UMS_PHONE_NOT_FOUND_FOR_USER
      description: The server cannot or will not process the request because it failed
        business logic.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_PHONE_NOT_FOUND_FOR_USER\",\n      \"details\" : \"No mobile\
        \ telephone number found for user {0}\"\n    }\n  ]\n}"
    UMS_UNABLE_SEND_MESSAGE:
      summary: UMS_UNABLE_SEND_MESSAGE
      description: The server cannot or will not process the request because it failed
        business logic.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_UNABLE_SEND_MESSAGE\",\n      \"details\" : \"Unable to send\
        \ messages to {0}\"\n    }\n  ]\n}"
    UMS_ENTITY_WITH_DETAIL_NOT_FOUND:
      summary: UMS_ENTITY_WITH_DETAIL_NOT_FOUND
      description: The server cannot or will not process the request due to it failed
        a business logic.
      value: "{\n  \"issues\": [\n    {\n      \"severity\" : \"error\",\n      \"\
        code\" : \"UMS_ENTITY_WITH_DETAIL_NOT_FOUND\",\n      \"details\" : \"{0}\
        \ with {1} {2} not found.\"\n    }\n  ]\n}"
